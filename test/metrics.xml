<?xml version="1.0" encoding="UTF-8"?>
<counter-set uri="shaders">
  <counters>
    <counter uri="shaders.ps.isa16.send_render_cache" name="PS16: RC accesses" shader_files="PS_WGF*_16.isa" platform="" description="PS: number of accesses to Render Cache (SIMD16)" comment="SELECT 'send.*0x.5s'"/>
    <counter uri="shaders.ps.isa16.send_const_cache" name="PS16: CTC accesses" shader_files="PS_WGF*_16.isa" platform="" description="PS: number of accesses to constant cache (SIMD16)" comment="SELECT 'send.*0x.9s'"/>
    <counter uri="shaders.vs.isa.send_sampler" name="VS: sampler accesses" shader_files="VS_WGF*.isa" platform="" description="VS: number of sampler accesses" comment="SELECT 'send.*0x.2s'"/>
    <counter uri="shaders.vs.isa.send_urb" name="VS: URB accesses" shader_files="VS_WGF*.isa" platform="" description="VS: number of URB accesses" comment="SELECT 'send.*0x.6s'"/>
    <counter uri="shaders.vs.isa.send_const_cache" name="VS: CTC accesses" shader_files="VS_WGF*.isa" platform="" description="VS: number of constant cache accesses" comment="SELECT 'send.*0x.9s'"/>
    <counter uri="shaders.vs.isa.send_data_cache" name="VS: DC accesses" shader_files="VS_WGF*.isa" platform="" description="VS: number of data cache accesses" comment="SELECT 'send.*0x.As'"/>
    <counter uri="shaders.vs.isa.instr_total" name="VS: ISA instructions" shader_files="VS_WGF*.isa" platform="" description="VS: total number of ISA instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.ps.isa8.instr_total" name="PS8: ISA instructions" shader_files="PS_WGF*_8.isa" platform="" description="PS: total number of ISA SIMD8 instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.ps.isa16.instr_total" name="PS16: ISA instructions" shader_files="PS_WGF*_16.isa" platform="" description="PS: total number of ISA SIMD16 instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.cs.isa.instr_total" name="CS: ISA instructions" shader_files="CS_WGF*.isa" platform="" description="CS: total number of ISA instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.gs.isa.instr_total" name="GS: ISA instructions" shader_files="GS_WGF*.isa" platform="" description="GS: total number of ISA instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.hs.isa.instr_total" name="HS: ISA instructions" shader_files="HS_WGF*.isa" platform="" description="HS: total number of ISA instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.ds.isa.instr_total" name="DS: ISA instructions" shader_files="DS_WGF*.isa" platform="" description="DS: total number of ISA instructions" comment="SELECT '(.*)'"/>
    <counter uri="shaders.ps.asm.sample_offset" name="PS samples with u/v/q offset" shader_files="PS_DX_*.asm" platform="" description="PS: number of samples with additional u/v/q offset provided" comment="SELECT 'samplew*(-*d,-*d,-*d)'"/>
    <counter uri="shaders.ps.asm.atomic.alloc" name="PS number of atomic allocs" shader_files="PS_DX_*.asm" platform="" description="PS: Number of atomic operations to hidden UAV counter" comment="SELECT 'imm_atomic_alloc'"/>
    <counter uri="shaders.ps.asm.atomic.consume" name="PS number of atomic consumes" shader_files="PS_DX_*.asm" platform="" description="PS: Number of atomic decrement operations to hidden UAV counter" comment="SELECT 'imm_atomic_consume'"/>
    <counter uri="shaders.cs.asm.atomic.alloc" name="CS number of atomic allocs" shader_files="CS_DX_*.asm" platform="" description="CS: Number of atomic increment operations to hidden UAV counter" comment="SELECT 'imm_atomic_alloc'"/>
    <counter uri="shaders.cs.asm.atomic.consume" name="CS number of atomic consumes" shader_files="CS_DX_*.asm" platform="" description="CS: Number of atomic decrement operations to hidden UAV counter" comment="SELECT 'imm_atomic_consume'"/>
    <counter uri="shaders.ps.asm.discard" name="PS discard instructions" shader_files="PS_DX_*.asm" platform="" description="PS: number of discard instruction used" comment="SELECT 'discard'"/>
    <counter uri="shaders.ps.asm.texkill" name="PS: texkill instructions" shader_files="PS_DX_*.asm" platform="" description="PS: number of texkill instructions used" comment="SELECT 'texkill'"/>
    <counter uri="shaders.ps.asm.gather4_c" name="PS: gather4_c" shader_files="PS_DX_*.asm" platform="" description="PS: Number of gather4_c instructions used." comment="SELECT 'gather4_c'"/>
    <counter uri="shaders.ps.asm.ctrl_flow" name="PS control flow" shader_files="PS_DX_*.asm" platform="" description="PS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.vs.asm.ctrl_flow" name="VS control flow" shader_files="VS_DX_*.asm" platform="" description="VS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.cs.asm.ctrl_flow" name="CS control flow" shader_files="CS_DX_*.asm" platform="" description="CS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.hs.asm.ctrl_flow" name="HS control flow" shader_files="HS_DX_*.asm" platform="" description="HS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.ds.asm.ctrl_flow" name="DS control flow" shader_files="DS_DX_*.asm" platform="" description="DS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.gs.asm.ctrl_flow" name="GS control flow" shader_files="GS_DX_*.asm" platform="" description="GS: uses control flow (ifs, loops)" comment="SELECT 'endif | endloop | endrep'"/>
    <counter uri="shaders.ps.asm.disp.per_sample" name="PS dispatch: per-sample" shader_files="PS_DX_*.asm" platform="" description="PS dispatched in per-sample mode" comment="SELECT 'dcl_input_psw*.*sampleIndex'"/>
    <counter uri="shaders.vs.il_post.const_reg" name="VS constant registers" shader_files="D3D_VS_*_postcompile.il" platform="" description="VS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.ps.il_post.const_reg" name="PS constant registers" shader_files="D3D_PS_*_postcompile.il" platform="" description="PS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.hs.il_post.const_reg" name="HS constant registers" shader_files="D3D_HS_*_postcompile.il" platform="" description="HS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.cs.il_post.const_reg" name="CS constant registers" shader_files="D3D_CS_*_postcompile.il" platform="" description="CS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.ds.il_post.const_reg" name="DS constant registers" shader_files="D3D_DS_*_postcompile.il" platform="" description="DS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.gs.il_post.const_reg" name="GS constant registers" shader_files="D3D_GS_*_postcompile.il" platform="" description="GS: Number of constant registers" comment="SELECT 'DCL_CONSTANTREGISTER'"/>
    <counter uri="shaders.vs.asm.in_attr" name="VS input attributes used" shader_files="VS_DX_*.asm" platform="" description="VS input attributes used in shader code" comment="SELECT COUNT FROM (&#10;    SELECT DISTINCT 'dcl_\w+.v\d+'&#10;)"/>
    <counter uri="shaders.vs.asm.out_attr" name="VS output attributes used" shader_files="VS_DX_*.asm" platform="" description="VS output attributes used in shader code" comment="SELECT COUNT FROM (&#10;    SELECT DISTINCT 'dcl_\w+[_a-zA-Z]*.o\d+'&#10;)"/>
    <counter uri="shaders.vs.asm.in_chnl" name="VS input channels" shader_files="VS_DX_*.asm" platform="" description="VS input channels used in shader code" comment="SELECT SUM COUNT EACH FROM (&#10;  SELECT DISTINCT EACH '[xyzw]+' FROM (&#10;      SELECT 'dcl_input\s+v\d+.[xyzw]+'&#10;    )&#10;)&#10;"/>
    <counter uri="shaders.vs.asm.out_chnl" name="VS output channels" shader_files="VS_DX_*.asm" platform="" description="VS output channels used in shader code" comment="SELECT SUM COUNT EACH FROM (&#10;  SELECT DISTINCT EACH '[xyzw]+' FROM (&#10;      SELECT 'dcl_output\s+o\d+.[xyzw]+'&#10;    )&#10;)&#10;"/>
    <counter uri="shaders.ps.asm.in_attr" name="PS input attributes" shader_files="PS_DX_*.asm" platform="" description="PS input attributes" comment="SELECT COUNT FROM (&#10;    SELECT DISTINCT 'dcl_input_ps.[ a-zA-z]*.v\d+|dcl_\w+.v\d+'&#10;)"/>
    <counter uri="shaders.vs.asm.in_attr_max" name="VS max id of input register" shader_files="VS_DX_*.asm" platform="" description="VS max id of input register" comment="SELECT MAX '\d+' FROM (&#10;    SELECT DISTINCT 'dcl_input.v\d+|dcl_\w+.v\d+'&#10;)"/>
    <counter uri="shaders.ps.asm.in_chnl" name="PS input channels" shader_files="PS_DX_*.asm" platform="" description="" comment="SELECT SUM COUNT EACH FROM (&#10;  SELECT DISTINCT EACH '[xyzw]+' FROM (&#10;      SELECT 'dcl_input_ps.[ a-zA-z]*\s+v\d+.[xyzw]+'&#10;    )&#10;)&#10;"/>
    <counter uri="shaders.ps.asm.in_attr_max" name="PS max id of input register" shader_files="PS_DX_*.asm" platform="" description="PS max id of input register" comment="SELECT MAX '\d+' FROM (&#10;    SELECT DISTINCT 'dcl_input_ps.[ a-zA-z]*.v\d+|dcl_\w+.v\d+'&#10;)"/>
    <counter uri="shaders.ps.asm.out_attr" name="PS output attributes" shader_files="PS_DX_*.asm" platform="" description="PS output attributes used in shader code" comment="SELECT COUNT '\d+' FROM (&#10;    SELECT DISTINCT 'dcl_output[_a-zA-Z]*.o\d+'&#10;)"/>
    <counter uri="shaders.ps.asm.out_chnl" name="PS output channels" shader_files="PS_DX_*.asm" platform="" description="PS output channels used in shader code" comment="SELECT SUM COUNT EACH FROM (&#10;  SELECT DISTINCT EACH '[xyzw]+' FROM (&#10;      SELECT 'dcl_output\s+o\d+.[xyzw]+'&#10;    )&#10;)"/>
    <counter uri="shaders.vs.asm.out_attr_max" name="VS max id of output register" shader_files="VS_DX_*.asm" platform="" description="VS max id of output register" comment="SELECT MAX '\d+' FROM (&#10;    SELECT DISTINCT 'dcl_output[_a-zA-Z]*.o\d+'&#10;)"/>
    <counter uri="shaders.ps.asm.out_attr_max" name="PS max id of output register" shader_files="PS_DX_*.asm" platform="" description="PS max id of output register" comment="SELECT MAX '\d+' FROM (&#10;    SELECT DISTINCT 'dcl_output[_a-zA-Z]*.o\d+'&#10;)"/>
    <counter uri="shaders.dx9.vs.asm.out_chnl" name="VS output channels" shader_files="VS_DX_*.asm" platform="" description="" comment="SELECT VISIBLE+INVISIBLE*4 FROM &#10;(SELECT COUNT '[xyzw]{1}' AS VISIBLE, COUNT AS ALL,  COUNT 'o\d+.^[xyzw]*' AS INVISIBLE  FROM(&#10;    SELECT 'o\d+.[xyzw]*' FROM(&#10;        SELECT 'dcl_texcoord\d{0,1}\s+o\d+.[xyzw]*|dcl_color\d{0,1}\s+o\d+.[xyzw]*'&#10;    )&#10;) )"/>
    <counter uri="shaders.dx9.ps.asm.in_chnl" name="PS input channels" shader_files="PS_DX_*.asm" platform="" description="" comment="SELECT VISIBLE+INVISIBLE*4 FROM &#10;(SELECT COUNT '[xyzw]{1}' AS VISIBLE, COUNT AS ALL,  COUNT 'v\d+.^[xyzw]*' AS INVISIBLE  FROM(&#10;    SELECT 'v\d+.[xyzw]*' FROM(&#10;        SELECT 'dcl_texcoord\d{0,1}\s+v\d+.[xyzw]*|dcl_position\d{0,1}\s+v\d+.[xyzw]*|dcl_color\d{0,1}\s+v\d+.[xyzw]*'&#10;    )&#10;) )"/>
  </counters>
</counter-set>
