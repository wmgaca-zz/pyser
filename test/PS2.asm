//
// Generated by Microsoft (R) HLSL Shader Compiler 9.27.952.3022
//
//
// Buffer Definitions: 
//
// cbuffer PFXConstants
// {
//
//   float4 g_xOneOverScreenDimensions; // Offset:    0 Size:    16 [unused]
//   bool g_bCrossfadeTextureFrames;    // Offset:   16 Size:     4
//   bool g_bUseLighting;               // Offset:   20 Size:     4 [unused]
//   bool g_bVolumetric;                // Offset:   24 Size:     4
//   bool g_bUseFogging;                // Offset:   28 Size:     4
//
// }
//
// cbuffer FogParams
// {
//
//   float3 g_xFogColour;               // Offset:    0 Size:    12
//   float g_fFogNearPlane;             // Offset:   12 Size:     4
//   float g_fRcpFogVolumeDepth;        // Offset:   16 Size:     4
//   float g_fFarClipPlane;             // Offset:   20 Size:     4 [unused]
//   bool g_bFogEnabled;                // Offset:   24 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// g_xTrilinearClamp                 sampler      NA          NA    3        1
// g_xFilteredClamp                  sampler      NA          NA    5        1
// g_xEffectTexture                  texture  float4          2d    0        1
// g_xNormDepthTexture               texture  float4          2d    1        1
// g_xFogTexture                     texture  float4          1d  104        1
// PFXConstants                      cbuffer      NA          NA    1        1
// FogParams                         cbuffer      NA          NA   12        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Position              0   xyzw        0      POS  float   xy  
// COLOR                    0   xyzw        1     NONE  float   xyzw
// TEXCOORD                 0   xyzw        2     NONE  float   xyzw
// TEXCOORD                 1   xyzw        3     NONE  float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_Target                0   xyzw        0   TARGET  float   xyzw
//
ps_4_0
dcl_constantbuffer cb1[2], immediateIndexed
dcl_constantbuffer cb12[2], immediateIndexed
dcl_sampler s3, mode_default
dcl_sampler s5, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t1
dcl_resource_texture1d (float,float,float,float) t104
dcl_input_ps_siv linear noperspective v0.xy, position
dcl_input_ps linear v1.xyzw
dcl_input_ps linear v2.xyzw
dcl_input_ps linear v3.xzw
dcl_output o0.xyzw
dcl_temps 3
sample r0.xyzw, v2.xyxx, t0.xyzw, s5
sample r1.xyzw, v2.zwzz, t0.xyzw, s5
add r2.xyzw, r0.xyzw, -r1.xyzw
mad r1.xyzw, v3.xxxx, r2.xyzw, r1.xyzw
mul r1.xyzw, r1.xyzw, v1.xyzw
mul r0.xyzw, r0.xyzw, v1.xyzw
movc r0.xyzw, cb1[1].xxxx, r1.xyzw, r0.xyzw
if_nz cb1[1].z
  ftoi r1.xy, v0.xyxx
  mov r1.zw, l(0,0,0,0)
  ld r1.xyzw, r1.xyzw, t1.xyzw
  add r1.x, |r1.z|, -v3.w
  div r1.x, |r1.x|, v3.z
  min r1.x, r1.x, l(1.000000)
  mul r0.w, r0.w, r1.x
endif 
if_nz cb1[1].w
  if_nz cb12[1].z
    add r1.x, v3.x, -cb12[0].w
    mul r1.x, r1.x, cb12[1].x
    sample r1.xyzw, r1.xxxx, t104.xyzw, s3
    add r1.xyz, -r0.xyzx, cb12[0].xyzx
    mad r0.xyz, r1.wwww, r1.xyzx, r0.xyzx
  endif 
  mov o0.xyzw, r0.xyzw
  ret 
else 
  mov o0.xyzw, r0.xyzw
  ret 
endif 
ret 
// Approximately 31 instruction slots used
